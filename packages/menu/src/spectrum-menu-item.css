/*
Copyright 2022 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
.icon {
    fill: var(
        --highcontrast-menu-item-label-icon-color-default,
        var(
            --mod-menu-item-label-icon-color-default,
            var(--spectrum-menu-item-label-icon-color-default)
        )
    ); /* .spectrum-Menu-itemIcon */
}
:host {
    align-items: center;
    background-color: var(
        --mod-menu-item-background-color-default,
        var(--spectrum-menu-item-background-color-default)
    );
    box-sizing: border-box;
    cursor: pointer; /* .spectrum-Menu-item,
   * .spectrum-Menu li:not(.spectrum-Menu-item, .spectrum-Menu-divider) */
    line-height: var(
        --mod-menu-item-label-line-height,
        var(--spectrum-menu-item-label-line-height)
    );
    margin: 0;
    min-block-size: var(
        --mod-menu-item-min-height,
        var(--spectrum-menu-item-min-height)
    );
    padding-block-end: var(
        --mod-menu-item-bottom-edge-to-text,
        var(--spectrum-menu-item-bottom-edge-to-text)
    );
    padding-block-start: var(
        --mod-menu-item-top-edge-to-text,
        var(--spectrum-menu-item-top-edge-to-text)
    );
    padding-inline: var(
        --mod-menu-item-label-inline-edge-to-content,
        var(--spectrum-menu-item-label-inline-edge-to-content)
    );
    position: relative;
    text-decoration: none;
}
:host {
    display: grid; /* .spectrum-Menu-item,
   * .spectrum-Menu li:not(.spectrum-Menu-item, .spectrum-Menu-divider) */
    grid-template-areas: '.            chevronAreaCollapsible .             iconArea sectionHeadingArea  .         .           .                 ' 'selectedArea chevronAreaCollapsible checkmarkArea iconArea labelArea        valueArea actionsArea chevronAreaDrillIn' '.            .                      .             .        descriptionArea  .         .           .                 ' '.            .                      .             .        submenuArea      .         .           .                 ';
    grid-template-columns: auto auto auto auto 1fr auto auto auto;
    grid-template-rows: 1fr auto;
}
#TODO {
    display: grid; /* .spectrum-Menu-item .spectrum-Menu-item */
    grid-template-areas: 'submenuItemLabelArea submenuItemValueArea';
    grid-template-columns: auto auto;
    grid-template-rows: 1fr auto;
}
#TODO #label {
    grid-area: submenuItemLabelArea; /* .spectrum-Menu-item .spectrum-Menu-item .spectrum-Menu-itemLabel */
}
#TODO ::slotted([slot='value']) {
    grid-area: submenuItemValueArea; /* .spectrum-Menu-item .spectrum-Menu-item .spectrum-Menu-itemValue */
}
:host(.focus-visible),
:host(:focus),
:host([focused]) {
    background-color: var(
        --highcontrast-menu-item-background-color-key-focus,
        var(
            --mod-menu-item-background-color-key-focus,
            var(--spectrum-menu-item-background-color-key-focus)
        )
    ); /* .spectrum-Menu-item:focus,
   * .spectrum-Menu-item:focus-visible,
   * .spectrum-Menu-item.is-focused */
    box-shadow: inset
        var(
            --mod-menu-item-focus-indicator-width,
            var(--spectrum-menu-item-focus-indicator-width)
        )
        0 0 0
        var(
            --highcontrast-menu-item-focus-indicator-color,
            var(
                --mod-menu-item-focus-indicator-color,
                var(--spectrum-menu-item-focus-indicator-color)
            )
        );
    outline: none;
}
:host(:focus),
:host(:focus-visible),
:host([focused]) {
    background-color: var(
        --highcontrast-menu-item-background-color-key-focus,
        var(
            --mod-menu-item-background-color-key-focus,
            var(--spectrum-menu-item-background-color-key-focus)
        )
    ); /* .spectrum-Menu-item:focus,
   * .spectrum-Menu-item:focus-visible,
   * .spectrum-Menu-item.is-focused */
    box-shadow: inset
        var(
            --mod-menu-item-focus-indicator-width,
            var(--spectrum-menu-item-focus-indicator-width)
        )
        0 0 0
        var(
            --highcontrast-menu-item-focus-indicator-color,
            var(
                --mod-menu-item-focus-indicator-color,
                var(--spectrum-menu-item-focus-indicator-color)
            )
        );
    outline: none;
}
:host(.focus-visible) #label,
:host(:focus) #label,
:host([focused]) #label {
    color: var(
        --highcontrast-menu-item-label-content-color-focus,
        var(
            --mod-menu-item-label-content-color-focus,
            var(--spectrum-menu-item-label-content-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-itemLabel,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-itemLabel,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-itemLabel */
}
:host(:focus) #label,
:host(:focus-visible) #label,
:host([focused]) #label {
    color: var(
        --highcontrast-menu-item-label-content-color-focus,
        var(
            --mod-menu-item-label-content-color-focus,
            var(--spectrum-menu-item-label-content-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-itemLabel,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-itemLabel,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-itemLabel */
}
:host(.focus-visible) .spectrum-Menu-itemDescription,
:host(:focus) .spectrum-Menu-itemDescription,
:host([focused]) .spectrum-Menu-itemDescription {
    color: var(
        --highcontrast-menu-item-description-color-focus,
        var(
            --mod-menu-item-description-color-focus,
            var(--spectrum-menu-item-description-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-itemDescription,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-itemDescription,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-itemDescription */
}
:host(:focus) .spectrum-Menu-itemDescription,
:host(:focus-visible) .spectrum-Menu-itemDescription,
:host([focused]) .spectrum-Menu-itemDescription {
    color: var(
        --highcontrast-menu-item-description-color-focus,
        var(
            --mod-menu-item-description-color-focus,
            var(--spectrum-menu-item-description-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-itemDescription,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-itemDescription,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-itemDescription */
}
:host(.focus-visible) ::slotted([slot='value']),
:host(:focus) ::slotted([slot='value']),
:host([focused]) ::slotted([slot='value']) {
    color: var(
        --highcontrast-menu-item-value-color-focus,
        var(
            --mod-menu-item-value-color-focus,
            var(--spectrum-menu-item-value-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-itemValue,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-itemValue,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-itemValue */
}
:host(:focus) ::slotted([slot='value']),
:host(:focus-visible) ::slotted([slot='value']),
:host([focused]) ::slotted([slot='value']) {
    color: var(
        --highcontrast-menu-item-value-color-focus,
        var(
            --mod-menu-item-value-color-focus,
            var(--spectrum-menu-item-value-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-itemValue,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-itemValue,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-itemValue */
}
:host(.focus-visible) .icon:not(.chevron, .checkmark),
:host(:focus) .icon:not(.chevron, .checkmark),
:host([focused]) .icon:not(.chevron, .checkmark) {
    fill: var(
        --highcontrast-menu-item-label-icon-color-focus,
        var(
            --mod-menu-item-label-icon-color-focus,
            var(--spectrum-menu-item-label-icon-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark),
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark),
   * .spectrum-Menu-item.is-focused .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark) */
}
:host(:focus) .icon:not(.chevron, .checkmark),
:host(:focus-visible) .icon:not(.chevron, .checkmark),
:host([focused]) .icon:not(.chevron, .checkmark) {
    fill: var(
        --highcontrast-menu-item-label-icon-color-focus,
        var(
            --mod-menu-item-label-icon-color-focus,
            var(--spectrum-menu-item-label-icon-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark),
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark),
   * .spectrum-Menu-item.is-focused .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark) */
}
:host(.focus-visible) .chevron,
:host(:focus) .chevron,
:host([focused]) .chevron {
    fill: var(
        --highcontrast-menu-collapsible-icon-color,
        var(
            --mod-menu-collapsible-icon-color,
            var(--spectrum-menu-collapsible-icon-color)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-chevron,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-chevron,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-chevron */
}
:host(:focus) .chevron,
:host(:focus-visible) .chevron,
:host([focused]) .chevron {
    fill: var(
        --highcontrast-menu-collapsible-icon-color,
        var(
            --mod-menu-collapsible-icon-color,
            var(--spectrum-menu-collapsible-icon-color)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-chevron,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-chevron,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-chevron */
}
:host(.focus-visible) .checkmark,
:host(:focus) .checkmark,
:host([focused]) .checkmark {
    fill: var(
        --highcontrast-menu-checkmark-icon-color-focus,
        var(
            --mod-menu-checkmark-icon-color-focus,
            var(--spectrum-menu-checkmark-icon-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-checkmark,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-checkmark,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-checkmark */
}
:host(:focus) .checkmark,
:host(:focus-visible) .checkmark,
:host([focused]) .checkmark {
    fill: var(
        --highcontrast-menu-checkmark-icon-color-focus,
        var(
            --mod-menu-checkmark-icon-color-focus,
            var(--spectrum-menu-checkmark-icon-color-focus)
        )
    ); /* .spectrum-Menu-item:focus .spectrum-Menu-checkmark,
   * .spectrum-Menu-item:focus-visible .spectrum-Menu-checkmark,
   * .spectrum-Menu-item.is-focused .spectrum-Menu-checkmark */
}
:host([dir='rtl'].focus-visible),
:host([dir='rtl']:focus),
:host([dir='rtl'][focused]) {
    box-shadow: inset
        calc(
            var(
                    --mod-menu-item-focus-indicator-width,
                    var(--spectrum-menu-item-focus-indicator-width)
                ) * -1
        )
        0 0
        var(
            --highcontrast-menu-item-focus-indicator-color,
            var(
                --mod-menu-item-focus-indicator-color,
                var(--spectrum-menu-item-focus-indicator-color)
            )
        ); /* [dir=rtl] .spectrum-Menu-item:focus,
   * [dir=rtl] .spectrum-Menu-item:focus-visible,
   * [dir=rtl] .spectrum-Menu-item.is-focused */
}
:host([dir='rtl']:focus),
:host([dir='rtl']:focus-visible),
:host([dir='rtl'][focused]) {
    box-shadow: inset
        calc(
            var(
                    --mod-menu-item-focus-indicator-width,
                    var(--spectrum-menu-item-focus-indicator-width)
                ) * -1
        )
        0 0
        var(
            --highcontrast-menu-item-focus-indicator-color,
            var(
                --mod-menu-item-focus-indicator-color,
                var(--spectrum-menu-item-focus-indicator-color)
            )
        ); /* [dir=rtl] .spectrum-Menu-item:focus,
   * [dir=rtl] .spectrum-Menu-item:focus-visible,
   * [dir=rtl] .spectrum-Menu-item.is-focused */
}
:host(:hover) {
    background-color: var(
        --highcontrast-menu-item-background-color-hover,
        var(
            --mod-menu-item-background-color-hover,
            var(--spectrum-menu-item-background-color-hover)
        )
    ); /* .spectrum-Menu-item:hover */
}
:host(:hover) #label {
    color: var(
        --highcontrast-menu-item-label-content-color-hover,
        var(
            --mod-menu-item-label-content-color-hover,
            var(--spectrum-menu-item-label-content-color-hover)
        )
    ); /* .spectrum-Menu-item:hover .spectrum-Menu-itemLabel */
}
:host(:hover) .spectrum-Menu-itemDescription {
    color: var(
        --highcontrast-menu-item-description-color-hover,
        var(
            --mod-menu-item-description-color-hover,
            var(--spectrum-menu-item-description-color-hover)
        )
    ); /* .spectrum-Menu-item:hover .spectrum-Menu-itemDescription */
}
:host(:hover) ::slotted([slot='value']) {
    color: var(
        --highcontrast-menu-item-value-color-hover,
        var(
            --mod-menu-item-value-color-hover,
            var(--spectrum-menu-item-value-color-hover)
        )
    ); /* .spectrum-Menu-item:hover .spectrum-Menu-itemValue */
}
:host(:hover) .icon:not(.chevron, .checkmark) {
    fill: var(
        --highcontrast-menu-item-label-icon-color-hover,
        var(
            --mod-menu-item-label-icon-color-hover,
            var(--spectrum-menu-item-label-icon-color-hover)
        )
    ); /* .spectrum-Menu-item:hover .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark) */
}
:host(:hover) .chevron {
    fill: var(
        --highcontrast-menu-collapsible-icon-color,
        var(
            --mod-menu-collapsible-icon-color,
            var(--spectrum-menu-collapsible-icon-color)
        )
    ); /* .spectrum-Menu-item:hover .spectrum-Menu-chevron */
}
:host(:hover) .checkmark {
    fill: var(
        --highcontrast-menu-checkmark-icon-color-hover,
        var(
            --mod-menu-checkmark-icon-color-hover,
            var(--spectrum-menu-checkmark-icon-color-hover)
        )
    ); /* .spectrum-Menu-item:hover .spectrum-Menu-checkmark */
}
:host(:active) {
    background-color: var(
        --highcontrast-menu-item-background-color-down,
        var(
            --mod-menu-item-background-color-down,
            var(--spectrum-menu-item-background-color-down)
        )
    ); /* .spectrum-Menu-item:active */
}
:host(:active) #label {
    color: var(
        --highcontrast-menu-item-label-content-color-down,
        var(
            --mod-menu-item-label-content-color-down,
            var(--spectrum-menu-item-label-content-color-down)
        )
    ); /* .spectrum-Menu-item:active .spectrum-Menu-itemLabel */
}
:host(:active) .spectrum-Menu-itemDescription {
    color: var(
        --highcontrast-menu-item-description-color-down,
        var(
            --mod-menu-item-description-color-down,
            var(--spectrum-menu-item-description-color-down)
        )
    ); /* .spectrum-Menu-item:active .spectrum-Menu-itemDescription */
}
:host(:active) .icon:not(.chevron, .checkmark) {
    fill: var(
        --highcontrast-menu-item-label-icon-color-down,
        var(
            --mod-menu-item-label-icon-color-down,
            var(--spectrum-menu-item-label-icon-color-down)
        )
    ); /* .spectrum-Menu-item:active .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark) */
}
:host(:active) ::slotted([slot='value']) {
    color: var(
        --highcontrast-menu-item-value-color-down,
        var(
            --mod-menu-item-value-color-down,
            var(--spectrum-menu-item-value-color-down)
        )
    ); /* .spectrum-Menu-item:active .spectrum-Menu-itemValue */
}
:host(:active) .chevron {
    fill: var(
        --highcontrast-menu-collapsible-icon-color,
        var(
            --mod-menu-collapsible-icon-color,
            var(--spectrum-menu-collapsible-icon-color)
        )
    ); /* .spectrum-Menu-item:active .spectrum-Menu-chevron */
}
:host(:active) .checkmark {
    fill: var(
        --highcontrast-menu-checkmark-icon-color-down,
        var(
            --mod-menu-checkmark-icon-color-down,
            var(--spectrum-menu-checkmark-icon-color-down)
        )
    ); /* .spectrum-Menu-item:active .spectrum-Menu-checkmark */
}
:host([aria-disabled='true']),
:host([disabled]) {
    background-color: transparent; /* .spectrum-Menu-item.is-disabled,
   * .spectrum-Menu-item[aria-disabled="true"] */
}
:host([aria-disabled='true']) #label,
:host([disabled]) #label {
    color: var(
        --highcontrast-menu-item-label-content-color-disabled,
        var(
            --mod-menu-item-label-content-color-disabled,
            var(--spectrum-menu-item-label-content-color-disabled)
        )
    ); /* .spectrum-Menu-item.is-disabled .spectrum-Menu-itemLabel,
   * .spectrum-Menu-item.is-disabled .spectrum-Menu-sectionHeading,
   * .spectrum-Menu-item[aria-disabled="true"] .spectrum-Menu-itemLabel,
   * .spectrum-Menu-item[aria-disabled="true"] .spectrum-Menu-sectionHeading */
}
:host([aria-disabled='true']) .spectrum-Menu-itemDescription,
:host([disabled]) .spectrum-Menu-itemDescription {
    color: var(
        --highcontrast-menu-item-description-color-disabled,
        var(
            --mod-menu-item-description-color-disabled,
            var(--spectrum-menu-item-description-color-disabled)
        )
    ); /* .spectrum-Menu-item.is-disabled .spectrum-Menu-itemDescription,
   * .spectrum-Menu-item[aria-disabled="true"] .spectrum-Menu-itemDescription */
}
:host([aria-disabled='true']) .icon,
:host([disabled]) .icon {
    fill: var(
        --highcontrast-menu-item-label-icon-color-disabled,
        var(
            --mod-menu-item-label-icon-color-disabled,
            var(--spectrum-menu-item-label-icon-color-disabled)
        )
    ); /* .spectrum-Menu-item.is-disabled .spectrum-Menu-itemIcon,
   * .spectrum-Menu-item[aria-disabled="true"] .spectrum-Menu-itemIcon */
}
:host([aria-disabled='true']:hover),
:host([disabled]:hover) {
    cursor: default; /* .spectrum-Menu-item.is-disabled:hover,
   * .spectrum-Menu-item[aria-disabled="true"]:hover */
}
:host([aria-disabled='true']:hover) .icon,
:host([disabled]:hover) .icon {
    fill: var(
        --highcontrast-menu-item-label-icon-color-disabled,
        var(
            --mod-menu-item-label-icon-color-disabled,
            var(--spectrum-menu-item-label-icon-color-disabled)
        )
    ); /* .spectrum-Menu-item.is-disabled:hover .spectrum-Menu-itemIcon,
   * .spectrum-Menu-item[aria-disabled="true"]:hover .spectrum-Menu-itemIcon */
}
.icon {
    align-self: center;
    grid-area: iconArea; /* .spectrum-Menu-itemIcon */
}
#label {
    color: var(
        --highcontrast-menu-item-label-content-color-default,
        var(
            --mod-menu-item-label-content-color-default,
            var(--spectrum-menu-item-label-content-color-default)
        )
    );
    font-size: var(
        --mod-menu-item-label-font-size,
        var(--spectrum-menu-item-label-font-size)
    );
    grid-area: labelArea; /* .spectrum-Menu-itemLabel */
}
::slotted([slot='value']) {
    grid-area: valueArea; /* .spectrum-Menu-itemValue */
}
.spectrum-Menu-itemActions {
    grid-area: actionsArea; /* .spectrum-Menu-itemActions */
}
.spectrum-Menu-item--collapsible .chevron {
    grid-area: chevronAreaCollapsible; /* .spectrum-Menu-item--collapsible .spectrum-Menu-chevron */
}
.spectrum-Menu-itemDescription {
    grid-area: descriptionArea; /* .spectrum-Menu-itemDescription */
}
.spectrum-Menu-item--drillIn .chevron {
    grid-area: chevronAreaDrillIn; /* .spectrum-Menu-item--drillIn .spectrum-Menu-chevron */
}
.icon:not(.chevron, .checkmark) {
    block-size: var(
        --mod-menu-item-icon-height,
        var(--spectrum-menu-item-icon-height)
    ); /* .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark) */
    inline-size: var(
        --mod-menu-item-icon-width,
        var(--spectrum-menu-item-icon-width)
    );
}
:host(:not([selected])) .checkmark + #label,
:host(:not([selected])) .checkmark + #label {
    margin-inline-start: 0; /* .spectrum-Menu-item:not(.is-selected) .spectrum-Menu-checkmark+.spectrum-Menu-itemLabel,
   * .spectrum-Menu-item:not(.is-selected) .spectrum-Menu-checkmark+.spectrum-Menu-itemLabel */
}
.icon + #label,
.icon ~ .spectrum-Menu-itemDescription {
    margin-inline-start: var(
        --mod-menu-item-label-text-to-visual,
        var(--spectrum-menu-item-label-text-to-visual)
    ); /* .spectrum-Icon+.spectrum-Menu-itemLabel,
   * .spectrum-Menu-itemIcon+.spectrum-Menu-itemLabel,
   * .spectrum-Icon~.spectrum-Menu-itemDescription,
   * .spectrum-Menu-itemIcon~.spectrum-Menu-itemDescription,
   * .spectrum-Icon+.spectrum-Menu-sectionHeading,
   * .spectrum-Menu-itemIcon+.spectrum-Menu-sectionHeading */
}
.spectrum-Menu-itemDescription {
    color: var(
        --highcontrast-menu-item-description-color-default,
        var(
            --mod-menu-item-description-color-default,
            var(--spectrum-menu-item-description-color-default)
        )
    ); /* .spectrum-Menu-itemDescription */
    font-size: var(
        --mod-menu-item-description-font-size,
        var(--spectrum-menu-item-description-font-size)
    );
    line-height: var(
        --mod-menu-item-description-line-height,
        var(--spectrum-menu-item-description-line-height)
    );
    margin-block-start: var(
        --mod-menu-item-label-to-description-spacing,
        var(--spectrum-menu-item-label-to-description-spacing)
    );
}
.spectrum-Menu-itemDescription,
#label {
    -webkit-hyphens: auto;
    hyphens: auto;
    overflow-wrap: break-word;
}
#label {
    /* .spectrum-Menu-itemLabel */
}
#label + ::slotted([slot='value']) {
    margin-inline-start: var(
        --mod-menu-item-label-to-value-area-min-spacing,
        var(--spectrum-menu-item-label-to-value-area-min-spacing)
    ); /* .spectrum-Menu-itemLabel+.spectrum-Menu-itemValue */
}
::slotted([slot='value']) {
    color: var(
        --highcontrast-menu-item-value-color-default,
        var(
            --mod-menu-item-value-color-default,
            var(--spectrum-menu-item-value-color-default)
        )
    ); /* .spectrum-Menu-itemValue */
    font-size: var(
        --mod-menu-item-label-font-size,
        var(--spectrum-menu-item-label-font-size)
    );
    justify-self: end;
}
:host([no-wrap]) #label {
    overflow: hidden;
    text-overflow: ellipsis; /* .spectrum-Menu-itemLabel--wrapping */
    white-space: nowrap;
}
.spectrum-Menu-item--collapsible.is-open {
    padding-block-end: 0; /* .spectrum-Menu-item--collapsible.is-open */
}
.spectrum-Menu-item--collapsible.is-open .chevron {
    transform: rotate(
        90deg
    ); /* .spectrum-Menu-item--collapsible.is-open .spectrum-Menu-chevron */
}
.spectrum-Menu-item--collapsible.is-open:active,
.spectrum-Menu-item--collapsible.is-open:focus,
.spectrum-Menu-item--collapsible.is-open:hover,
:host([focused]) .spectrum-Menu-item--collapsible.is-open {
    background-color: var(
        --highcontrast-menu-item-background-color-default,
        var(
            --mod-menu-item-background-color-default,
            var(--spectrum-menu-item-background-color-default)
        )
    ); /* .spectrum-Menu-item--collapsible.is-open:hover,
   * .spectrum-Menu-item--collapsible.is-open:active,
   * .spectrum-Menu-item--collapsible.is-open:focus,
   * .spectrum-Menu-item--collapsible.is-open.is-focused */
}
:host([dir='rtl']) .chevron {
    transform: rotate(-180deg); /* [dir=rtl] .spectrum-Menu-chevron */
}
.spectrum-Menu-item--drillIn .chevron {
    fill: var(
        --highcontrast-menu-drillin-icon-color-default,
        var(
            --mod-menu-drillin-icon-color-default,
            var(--spectrum-menu-drillin-icon-color-default)
        )
    ); /* .spectrum-Menu-item--drillIn .spectrum-Menu-chevron */
}
.spectrum-Menu-item--drillIn.is-open {
    background-color: var(
        --highcontrast-menu-item-background-color-hover,
        var(
            --mod-menu-item-background-color-hover,
            var(--spectrum-menu-item-background-color-hover)
        )
    ); /* .spectrum-Menu-item--drillIn.is-open */
}
.spectrum-Menu-item--drillIn.is-open .icon:not(.chevron, .checkmark) {
    fill: var(
        --highcontrast-menu-item-label-icon-color-hover,
        var(
            --mod-menu-item-label-icon-color-hover,
            var(--spectrum-menu-item-label-icon-color-hover)
        )
    ); /* .spectrum-Menu-item--drillIn.is-open .spectrum-Menu-itemIcon:not(.spectrum-Menu-chevron, .spectrum-Menu-checkmark) */
}
.spectrum-Menu-item--drillIn.is-open .chevron {
    fill: var(
        --highcontrast-menu-drillin-icon-color-hover,
        var(
            --mod-menu-drillin-icon-color-hover,
            var(--spectrum-menu-drillin-icon-color-hover)
        )
    ); /* .spectrum-Menu-item--drillIn.is-open .spectrum-Menu-chevron */
}
.spectrum-Menu-item--drillIn.is-open .checkmark {
    fill: var(
        --highcontrast-menu-checkmark-icon-color-hover,
        var(
            --mod-menu-checkmark-icon-color-hover,
            var(--spectrum-menu-checkmark-icon-color-hover)
        )
    ); /* .spectrum-Menu-item--drillIn.is-open .spectrum-Menu-checkmark */
}
.spectrum-Menu-item--drillIn #label + .chevron {
    margin-inline-start: var(
        --mod-menu-item-label-to-value-area-min-spacing,
        var(--spectrum-menu-item-label-to-value-area-min-spacing)
    ); /* .spectrum-Menu-item--drillIn .spectrum-Menu-itemLabel+.spectrum-Menu-chevron */
}
.spectrum-Menu-item--drillIn:hover .chevron {
    fill: var(
        --highcontrast-menu-drillin-icon-color-hover,
        var(
            --mod-menu-drillin-icon-color-hover,
            var(--spectrum-menu-drillin-icon-color-hover)
        )
    ); /* .spectrum-Menu-item--drillIn:hover .spectrum-Menu-chevron */
}
.spectrum-Menu-item--drillIn.focus-visible .chevron,
.spectrum-Menu-item--drillIn:focus .chevron,
:host([focused]) .spectrum-Menu-item--drillIn .chevron {
    fill: var(
        --highcontrast-menu-drillin-icon-color-focus,
        var(
            --mod-menu-drillin-icon-color-focus,
            var(--spectrum-menu-drillin-icon-color-focus)
        )
    ); /* .spectrum-Menu-item--drillIn:focus .spectrum-Menu-chevron,
   * .spectrum-Menu-item--drillIn:focus-visible .spectrum-Menu-chevron,
   * .spectrum-Menu-item--drillIn.is-focused .spectrum-Menu-chevron */
}
.spectrum-Menu-item--drillIn:focus .chevron,
.spectrum-Menu-item--drillIn:focus-visible .chevron,
:host([focused]) .spectrum-Menu-item--drillIn .chevron {
    fill: var(
        --highcontrast-menu-drillin-icon-color-focus,
        var(
            --mod-menu-drillin-icon-color-focus,
            var(--spectrum-menu-drillin-icon-color-focus)
        )
    ); /* .spectrum-Menu-item--drillIn:focus .spectrum-Menu-chevron,
   * .spectrum-Menu-item--drillIn:focus-visible .spectrum-Menu-chevron,
   * .spectrum-Menu-item--drillIn.is-focused .spectrum-Menu-chevron */
}
.spectrum-Menu-item--drillIn:active .chevron {
    fill: var(
        --highcontrast-menu-drillin-icon-color-down,
        var(
            --mod-menu-drillin-icon-color-down,
            var(--spectrum-menu-drillin-icon-color-down)
        )
    ); /* .spectrum-Menu-item--drillIn:active .spectrum-Menu-chevron */
}
